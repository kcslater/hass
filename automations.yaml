- id: thermostat_night_on
  alias: Thermostat At Midnight, On
  trigger:
  - platform: time
    at: 00:00:01
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.smartsensor_temperature
    below: '68.5'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.thermostat
    data:
      hvac_mode: heat
- id: thermostat_night_cold_on
  alias: Thermostat Below 68 After 4am, On
  trigger:
  - platform: numeric_state
    entity_id: sensor.smartsensor_temperature
    below: '68'
  - platform: state
    entity_id: binary_sensor.smartsensor_2
    to: 'off'
    for: 00:10:00
  - platform: time
    at: 04:00:00
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  - condition: state
    entity_id: climate.thermostat
    state: 'off'
  - condition: state
    entity_id: binary_sensor.smartsensor_2
    state: 'off'
    for: 00:09:00
  - condition: numeric_state
    entity_id: sensor.smartsensor_temperature
    below: '68.1'
  - condition: time
    after: 03:59:00
    before: 04:30:00
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.thermostat
    data:
      hvac_mode: heat
- id: thermostat_night_off
  alias: Thermostat 69.5 While Sleeping, Off
  trigger:
  - platform: numeric_state
    entity_id: sensor.smartsensor_temperature
    above: '71'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.thermostat
    data:
      hvac_mode: 'off'
- id: thermostat_night_off_after_4am
  alias: Thermostat 67.5 While Sleeping After 4am, Off
  trigger:
  - platform: numeric_state
    entity_id: sensor.smartsensor_temperature
    above: 67.5
  - platform: time
    at: 04:00:00
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'on'
  - condition: numeric_state
    entity_id: sensor.smartsensor_temperature
    above: 67.4
  - condition: time
    after: 03:59:00
  action:
  - service: climate.set_hvac_mode
    target:
      entity_id: climate.thermostat
    data:
      hvac_mode: 'off'
- id: tree_sunset
  alias: Sunset, Turn on Christmas Tree
  trigger:
  - platform: state
    entity_id: sun.sun
    to: below_horizon
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.alexa_ha_plug
- id: porch_light_on_front_door_opens
  alias: Porch Light On When Front Door Opens
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door
    to: 'on'
  condition:
    condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    data:
      entity_id: light.front_door
- id: porch_light_off_10mins
  alias: Porch Light Off After 20 Mins
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door
    to: 'off'
    for: 00:20:00
  condition:
  - condition: state
    entity_id: light.front_door
    state: 'on'
    for:
      hours: 0
      minutes: 20
      seconds: 0
  action:
  - service: light.turn_off
    entity_id: light.front_door
  mode: single
- id: remove_new_devices_notification
  alias: Remove new devices notification
  trigger:
  - platform: state
    entity_id: persistent_notification.config_entry_discovery
    to: notifying
  - platform: homeassistant
    event: start
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: config_entry_discovery
- id: time_for_bed_hue
  alias: Hue On Button Hold, Salt Lamp On and Nightlights in Bedroom and Nursery
  trigger:
  - device_id: ba4f5d90868d83280e80b115569b5853
    domain: hue
    platform: device
    type: long_release
    subtype: 1
    unique_id: 6481341c-a954-4faf-be4d-f701e75821ad
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.alexa_ha_plug
  - service: light.turn_on
    target:
      entity_id:
      - light.kailins_lamp
      - light.meghans_lamp
    data:
      brightness_pct: 1
  mode: single
- id: goodnight_hue
  alias: Hue Off Button Hold, Turn off Bedroom and Nursery Lights
  trigger:
  - device_id: ba4f5d90868d83280e80b115569b5853
    domain: hue
    platform: device
    type: long_release
    subtype: 4
    unique_id: 33bfbf65-8121-4e8d-93de-6c253e6e1eb0
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - group.bedroom
      - light.nursery
  mode: single
- id: standby_5am
  alias: 5 AM Anyone Present, Standby
  trigger:
  - platform: time
    at: 05:00:00
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: alarm_control_panel.alarm_disarm
    data:
      entity_id: alarm_control_panel.abode_alarm
- id: home_11pm
  alias: 11 PM Present, Home-Lock-Nightlight
  trigger:
  - platform: time
    at: '23:00:00'
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: alarm_control_panel.alarm_arm_home
    data:
      entity_id: alarm_control_panel.abode_alarm
  - service: script.lock_if_closed
- id: home_10pm
  alias: 8 PM Present, Sleeping On
  trigger:
  - platform: time
    at: '20:00:00'
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.sleeping
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.alexa_ha_nightlight
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.alexa_ha_nightlight
- id: everything_off_2am
  alias: 2 AM K and M Not Present, Everything Off
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: state
    entity_id: group.core_present
    state: 'off'
  action:
  - service: script.everything_off
  - service: script.lock_if_closed
  - service: cover.close_cover
    entity_id: cover.garage_door
- id: sleeping_off_6am
  alias: 7 AM, Sleeping Off
  trigger:
  - platform: time
    at: 07:00:00
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sleeping
- id: standby_arrival
  alias: Anyone Arrives, Standby
  trigger:
  - platform: state
    to: 'on'
    entity_id:
    - binary_sensor.m_present
    - binary_sensor.k_present
    - input_boolean.x_present
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: alarm_control_panel.abode_alarm
      state: armed_away
    - condition: state
      entity_id: alarm_control_panel.abode_alarm
      state: armed_home
  action:
  - data:
      entity_id: alarm_control_panel.abode_alarm
    service: alarm_control_panel.alarm_disarm
  - service: climate.set_preset_mode
    data:
      preset_mode: home
    target:
      entity_id: climate.thermostat
- id: porch_light_on_arrival_night
  alias: Anyone Arrives At Night, Porch Light
  trigger:
  - platform: state
    to: 'on'
    entity_id:
    - binary_sensor.m_present
    - binary_sensor.k_present
    - input_boolean.x_present
  condition:
  - condition: state
    entity_id: light.front_door
    state: 'off'
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  - before: '23:59'
    condition: time
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - data:
      entity_id: light.front_door
    service: light.turn_on
- id: living_room_lights_on_first_arrival
  alias: First Person Arrives At Night, Living Room Lights
  trigger:
  - platform: state
    to: 'on'
    entity_id:
    - group.all_present
    - group.core_present
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  - before: '22:00'
    condition: time
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: homeassistant.turn_on
    entity_id: group.living_room
- id: goodbye_last_exit
  alias: Last Person Leaves, Goodbye
  trigger:
  - platform: state
    entity_id: group.all_present
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: script.goodbye
- id: goodbye_away
  alias: Abode_alarm to Away, Goodbye
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode_alarm
    to: armed_away
  action:
  - service: script.goodbye
- id: mute_dn_up_dn
  alias: Soundbar Volume Down Up Down, Mute
  trigger:
  - platform: state
    entity_id: sensor.guest_room_volume
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.guest_room_stereo'', ''off'')
      }}'
  - condition: state
    entity_id: script.down_up_down_mute
    state: 'off'
  - condition: state
    entity_id: script.up_down_lights
    state: 'off'
  action:
  - service: script.down_up_down_mute
    data_template:
      vol_old: '{{ trigger.from_state.state }}'
      vol_new: '{{ trigger.to_state.state }}'
  mode: single
- id: lights_up_dn
  alias: Soundbar Volume Up Down, Lights
  trigger:
  - platform: state
    entity_id: sensor.guest_room_volume
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.guest_room_stereo'', ''off'')
      }}'
  - condition: state
    entity_id: script.down_up_down_mute
    state: 'off'
  - condition: state
    entity_id: script.up_down_lights
    state: 'off'
  action:
  - service: script.up_down_lights
    data_template:
      vol_old: '{{ trigger.from_state.state }}'
      vol_new: '{{ trigger.to_state.state }}'
- id: auto_lock
  alias: Lock After 20 Minutes
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door
    to: 'off'
    for: 00:20:00
  condition:
  - condition: state
    entity_id: lock.home_door_lock
    state: unlocked
    for: 00:20:00
  action:
  - data:
      entity_id: lock.home_door_lock
    service: lock.lock
- id: sonos_volume_ungroup
  alias: Sonos Volume Change, Ungroup
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_volume
    - sensor.kitchen_volume
    - sensor.living_room_volume
    - sensor.office_volume
  condition:
  - condition: template
    value_template: '{{ not is_state(''media_player.living_room'', ''playing'') }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.kitchen'', ''playing'') }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.bedroom'', ''playing'') }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.office'', ''playing'') }}'
  action:
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ ''media_player.''+trigger.entity_id.replace(''sensor.'', '''''''').replace(''_volume'','''''''')
        }}'
- id: sonos_volume_up_group
  alias: Sonos Volume Up, Group
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_volume
    - sensor.kitchen_volume
    - sensor.living_room_volume
    - sensor.office_volume
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state | float > trigger.from_state.state
      | float }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''''''').replace(''_volume'',''''''''),
      ''playing'') }}'
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.living_room
      state: playing
    - condition: state
      entity_id: media_player.kitchen
      state: playing
    - condition: state
      entity_id: media_player.bedroom
      state: playing
    - condition: state
      entity_id: media_player.office
      state: playing
  action:
  - service: script.sonos_check_controller
    data: {}
  - service: script.sonos_group
    data_template:
      target_player: media_player.{{ trigger.entity_id.replace('sensor.', '''').replace('_volume','''')
        }}
- id: sonos_volume_down_move
  alias: Sonos Volume Down, Move
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_volume
    - sensor.kitchen_volume
    - sensor.living_room_volume
    - sensor.office_volume
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''''''').replace(''_volume'',''''''''),
      ''playing'') }}'
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.living_room
      state: playing
    - condition: state
      entity_id: media_player.kitchen
      state: playing
    - condition: state
      entity_id: media_player.bedroom
      state: playing
    - condition: state
      entity_id: media_player.office
      state: playing
  action:
  - service: script.sonos_check_controller
    data: {}
  - service: script.sonos_move
    data_template:
      new_player: '{{ trigger.entity_id.replace(''sensor.'', ''media_player.'').replace(''_volume'','''''''')
        }}'
      old_player: '{{ ''media_player.'' + states(''input_select.music_controller'')  }}'
- id: sonos_play_change_controller
  alias: Sonos Play, Change Music Controller
  description: ''
  trigger:
  - platform: state
    to: playing
    entity_id:
    - media_player.bedroom
    - media_player.kitchen
    - media_player.living_room
    - media_player.office
  condition:
  - condition: template
    value_template: '{{ trigger.entity_id != ''media_player.'' + states(''input_select.music_controller'')
      }}'
  - condition: template
    value_template: '{{ trigger.entity_id == state_attr(trigger.entity_id, ''sonos_group'')[0]
      }}'
  action:
  - data_template:
      target_player: '{{ trigger.entity_id }}'
    service: script.sonos_set_controller
- id: sonos_stop_change_controller
  alias: Sonos Stop, Change Music Controller
  description: ''
  trigger:
  - platform: state
    from: playing
    for: 00:00:03
    entity_id:
    - media_player.bedroom
    - media_player.kitchen
    - media_player.living_room
    - media_player.office
  condition:
  - condition: template
    value_template: '{{ trigger.entity_id == ''media_player.'' + states(''input_select.music_controller'')
      }}'
  action:
  - service: script.sonos_set_controller
    data_template:
      target_player: "{% if is_state('media_player.living_room', 'playing') and 'media_player.living_room'\
        \ == state_attr('media_player.living_room', 'group_members')[0] %}\n  media_player.living_room\n\
        {% elif is_state('media_player.kitchen', 'playing') and 'media_player.kitchen'\
        \ == state_attr('media_player.kitchen', 'group_members')[0] %}\n  media_player.kitchen\n\
        {% elif is_state('media_player.bedroom', 'playing') and 'media_player.bedroom'\
        \ == state_attr('media_player.bedroom', 'group_members')[0] %}\n  media_player.bedroom\n\
        {% elif is_state('media_player.office', 'playing') and 'media_player.office'\
        \ == state_attr('media_player.office', 'group_members')[0] %}\n  media_player.office\n\
        {% endif %}\n"
- id: sonos_pause_play_skip
  alias: Sonos Pause Play, Skip
  description: ''
  trigger:
  - platform: state
    from: playing
    to: paused
    entity_id:
    - media_player.bedroom
    - media_player.kitchen
    - media_player.living_room
    - media_player.office
  condition:
  - condition: template
    value_template: '{{ trigger.entity_id == state_attr(trigger.entity_id, ''group_members'')[0]
      }}'
  action:
  - wait_template: '{{ is_state(trigger.entity_id, ''playing'') }}'
    timeout: 5
    continue_on_timeout: false
  - data_template:
      entity_id: '{{ trigger.entity_id }}'
    service: media_player.media_next_track
- id: sonos_volume_down_up_drop
  alias: Sonos Volume Down Up, Sonos Drop
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedroom_volume
    - sensor.kitchen_volume
    - sensor.living_room_volume
    - sensor.office_volume
  condition:
  - condition: template
    value_template: '{{ is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''''''').replace(''_volume'',''''''''),
      ''playing'') }}'
  - condition: template
    value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
  action:
  - wait_template: '{{ is_state(trigger.entity_id, trigger.from_state.state) }}'
    timeout: '1'
    continue_on_timeout: false
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ ''media_player.''+trigger.entity_id.replace(''sensor.'', '''''''').replace(''_volume'','''''''')
        }}'
  mode: single
- id: sonos_off_30_minutes_reset_volume
  alias: Sonos Paused 30 Minutes, Reset Volume
  description: ''
  trigger:
  - platform: state
    to: idle
    for:
      minutes: 30
    entity_id:
    - media_player.bedroom
    - media_player.kitchen
    - media_player.living_room
    - media_player.office
  condition: []
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: '{{ trigger.entity_id }}'
      volume_level: 0.25
- id: spotify_guest_room_echo
  alias: Spotify from Guest Room Echo to Stereo
  trigger:
  - entity_id: sensor.spotify_source
    platform: state
    to: Guest Room Echo Dot
  action:
    service: script.spotify_guest_room
- id: apple_watch_group
  alias: AW Group
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName:
      - bedroom
      - kitchen
      - living_room
      - office
  action:
  - service: script.sonos_group
    data_template:
      target_player: '{{ ''media_player.'' + trigger.event.data.actionName }}'
- id: notify_garage
  alias: Notify When Garage Is Open
  description: ''
  trigger:
  - platform: state
    to: open
    entity_id: cover.garage_door
    for: 00:20:00
  - platform: state
    to: open
    entity_id: cover.garage_door
    for: 00:40:00
  - platform: state
    to: open
    entity_id: cover.garage_door
    for: 01:00:00
  condition: []
  action:
  - data_template:
      data:
        actions:
        - action: GARAGE_CLOSE
          title: Close Garage
      message: The garage has been open for  {{ (trigger.for|string)[2:4].replace('00','60')
        }} minutes!
      title: Garage Open
    service: notify.mobile_app_iphone
  - data_template:
      data:
        actions:
        - action: GARAGE_CLOSE
          title: Close Garage
      message: The garage has been open for  {{ (trigger.for|string)[2:4].replace('00','60')
        }} minutes!
      title: Garage Open
    service: notify.mobile_app_meghans_iphone
- id: ios_garage_triggered
  alias: iOS - Garage Triggered Action
  trigger:
  - event_data:
      actionName: GARAGE_CLOSE
    event_type: ios.notification_action_fired
    platform: event
  action:
  - entity_id: cover.garage_door
    service: cover.close_cover
- id: notify_door_open_long
  alias: Notify When A Door Is Open For Long Time
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id:
    - binary_sensor.front_door
    - binary_sensor.side_door
    for: 00:20:00
  - platform: state
    to: 'on'
    entity_id:
    - binary_sensor.front_door
    - binary_sensor.side_door
    for: 00:40:00
  - platform: state
    to: 'on'
    entity_id:
    - binary_sensor.front_door
    - binary_sensor.side_door
    for: 01:00:00
  condition: []
  action:
  - data_template:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|lower }} has
        been open for {{ (trigger.for|string)[2:4].replace('00','60') }} minutes!
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open'
    service: notify.mobile_app_iphone
  - data_template:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|lower }} has
        been open for {{ (trigger.for|string)[2:4].replace('00','60') }} minutes!
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open'
    service: notify.mobile_app_meghans_iphone
- id: notify_door_open_no_one_home
  alias: Notify When Door Opens While No One Is Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door
    - binary_sensor.side_door
    to: 'on'
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'off'
  action:
  - data_template:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|lower }} was
        just opened, but it appears that no one is home! The alarm system  is currently
        {{ states('alarm_control_panel.abode_alarm')|upper }}.
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open'
    service: notify.mobile_app_iphone
  - data_template:
      message: The {{ state_attr(trigger.entity_id, 'friendly_name')|lower }} was
        just opened, but it appears that no one is home! The alarm system  is currently
        {{ states('alarm_control_panel.abode_alarm')|upper }}.
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open'
    service: notify.mobile_app_meghans_iphone
  mode: single
- id: soundbar_or_tv_off_lights_on_noguests
  alias: Soundbar or TV Off Without Guests, Lights On
  description: ''
  trigger:
  - platform: state
    to: 'off'
    from: playing
    entity_id: media_player.guest_room_stereo
  - platform: state
    to: standby
    entity_id: media_player.guest_room
  condition:
  - condition: state
    entity_id: input_boolean.guests_visiting
    state: 'off'
  - condition: state
    entity_id: light.guest_room
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  - condition: time
    before: '21:30'
  - condition: time
    after: '12:00'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.tv_off_recent
  - service: script.coming_up
  mode: single
- id: soundbar_or_tv_off_lights_on_guests
  alias: Soundbar or TV Off With Guests, Lights On
  description: ''
  trigger:
  - platform: state
    to: 'off'
    from: playing
    entity_id: media_player.guest_room_stereo
  - platform: state
    to: standby
    entity_id: media_player.guest_room
  condition:
  - condition: state
    entity_id: input_boolean.guests_visiting
    state: 'on'
  - condition: state
    entity_id: light.guest_room
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  - condition: time
    before: '21:30'
  - condition: time
    after: '12:00'
  action:
  - service: light.turn_on
    entity_id: light.guest_room
- id: turn_off_tv_off_recent
  alias: Turn Off TV-Off-Recent Indicator After 1 Minute
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.tv_off_recent
    to: 'on'
    for: 00:01:00
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.tv_off_recent
- id: tv_on_turn_off_kitchen_light
  alias: TV Back On, Turn Off Kitchen Light
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id: media_player.guest_room_stereo
  - platform: state
    to: standby
    entity_id: media_player.guest_room
  condition:
  - condition: state
    entity_id: input_boolean.tv_off_recent
    state: 'on'
  action:
  - service: switch.turn_off
    entity_id: switch.kitchen_lights
  - service: input_boolean.turn_off
    entity_id: input_boolean.tv_off_recent
- id: '1623041044622'
  alias: Hue On Button Tap, Salt Lamp On
  description: When Hue remote is pressed on, salt lamp turns on
  trigger:
  - device_id: ba4f5d90868d83280e80b115569b5853
    domain: hue
    platform: device
    type: short_release
    subtype: 1
    unique_id: 6481341c-a954-4faf-be4d-f701e75821ad
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.alexa_ha_plug
  mode: single
- id: '1623041440459'
  alias: Hue Off Button Tap, Salt Lamp Off
  description: ''
  trigger:
  - device_id: ba4f5d90868d83280e80b115569b5853
    domain: hue
    platform: device
    type: short_release
    subtype: 4
    unique_id: 33bfbf65-8121-4e8d-93de-6c253e6e1eb0
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.alexa_ha_plug
  mode: single
- id: living_room_lights_on_xmas_tree_on
  alias: Living Room Lights On, Christmas Tree On
  trigger:
  - platform: state
    entity_id: light.living_room
    to: 'on'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.alexa_ha_plug
- id: living_room_lights_off_xmas_tree_off
  alias: Living Room Lights Off, Christmas Tree Off
  trigger:
  - platform: state
    entity_id: light.living_room
    to: 'off'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.alexa_ha_plug
