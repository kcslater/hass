- id: porch_light_on_front_door_opens
  alias: Porch Light On When Front Door Opens
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door
    to: 'on'
  condition:
    condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    data:
      entity_id: light.front_door
- id: porch_light_off_10mins
  alias: Porch Light Off After 10 Mins
  trigger:
  - platform: state
    entity_id: binary_sensor.closed_light
    to: 'on'
    for: 00:10:00
  action:
  - service: light.turn_off
    entity_id: light.front_door
- id: remove_new_devices_notification
  alias: Remove new devices notification
  trigger:
  - platform: state
    entity_id: persistent_notification.config_entry_discovery
    to: notifying
  - platform: homeassistant
    event: start
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: config_entry_discovery
- id: time_for_bed_hue
  alias: Hold Hue On Button, Time For Bed
  trigger:
  - platform: state
    entity_id: sensor.hue_dimmer_switch_1
    to: 1_hold
  action:
    service: script.turn_on
    data:
      entity_id: script.time_for_bed
- id: goodnight_hue
  alias: Hold Hue Off Button, Goodnight
  trigger:
  - platform: state
    entity_id: sensor.hue_dimmer_switch_1
    to: 4_hold
  action:
    service: script.turn_on
    data:
      entity_id: script.goodnight
- id: standby_5am
  alias: 5 AM Present, Standby
  trigger:
  - platform: time
    at: 05:00:00
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: alarm_control_panel.alarm_disarm
    data:
      entity_id: alarm_control_panel.abode_alarm
- id: home_11pm
  alias: 11 PM Present, Home-Lock-Nightlight
  trigger:
  - platform: time
    at: '23:00:00'
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'on'
  action:
  - service: alarm_control_panel.alarm_arm_home
    data:
      entity_id: alarm_control_panel.abode_alarm
  - service: script.lock_if_closed
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.alexa_ha_nightlight
- id: everything_off_2am
  alias: 2 AM Not Present, Everything Off
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: state
    entity_id: group.all_present
    state: 'off'
  action:
  - service: script.everything_off
  - service: script.lock_if_closed
  - service: cover.close_cover
    entity_id: cover.garage_door
- id: sleeping_nightlight_off_6am
  alias: 6 AM, Sleeping and Nightlight Off
  trigger:
  - platform: time
    at: 06:00:00
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sleeping
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.alexa_ha_nightlight
- id: standby_arrival
  alias: Anyone Arrives, Standby
  trigger:
  - entity_id: binary_sensor.m_present
    platform: state
    to: 'on'
  - entity_id: binary_sensor.k_present
    platform: state
    to: 'on'
  - entity_id: input_boolean.x_present
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - data:
      entity_id: alarm_control_panel.abode_alarm
    service: alarm_control_panel.alarm_disarm
- id: porch_light_on_arrival_night
  alias: Anyone Arrives At Night, Porch Light
  trigger:
  - entity_id: binary_sensor.m_present
    platform: state
    to: 'on'
  - entity_id: binary_sensor.k_present
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  - before: '23:59'
    condition: time
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - data:
      entity_id: light.front_door
    service: light.turn_on
- id: living_room_lights_on_first_arrival
  alias: First Person Arrives At Night, Living Room Lights
  trigger:
  - entity_id: group.all_present
    platform: state
    to: 'on'
  - entity_id: group.core_present
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  - before: '22:00'
    condition: time
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - data:
      entity_id: light.living_room
    service: light.turn_on
- id: goodbye_last_exit
  alias: Last Person Leaves, Goodbye
  trigger:
  - platform: state
    entity_id: group.all_present
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: script.turn_on
    data:
      entity_id: script.goodbye
- id: goodbye_away
  alias: Abode_alarm to Away, Goodbye
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode_alarm
    to: armed_away
  action:
  - service: script.turn_on
    data:
      entity_id: script.goodbye
- id: mute_dn_up_dn
  alias: Down Up Down, Mute
  mode: single
  trigger:
  - platform: state
    entity_id: sensor.guest_room_volume
  variables:
    vol_old: '{{ trigger.from_state.state }}'
    vol_new: '{{ trigger.to_state.state }}'
  condition:
  - condition: template
    value_template: '{{ vol_new < vol_old }}'
  - condition: template
    value_template: "{{ not is_state('media_player.guest_room_stereo_main', 'off') }}"
  - condition: state
    entity_id: script.down_up_down_mute
    state: 'off'
  - condition: state
    entity_id: script.up_down_lights
    state: 'off'
  action:
  - service: script.down_up_down_mute
    data_template:
      vol_old: '{{ vol_old }}'
      vol_new: '{{ vol_new }}'
- id: lights_up_dn
  alias: Up Down, Lights
  mode: single
  trigger:
  - platform: state
    entity_id: sensor.guest_room_volume
  variables:
    vol_old: '{{ trigger.from_state.state }}'
    vol_new: '{{ trigger.to_state.state }}'
  condition:
  - condition: template
    value_template: '{{ vol_new > vol_old }}'
  - condition: template
    value_template: "{{ not is_state('media_player.guest_room_stereo_main', 'off') }}"
  - condition: state
    entity_id: script.down_up_down_mute
    state: 'off'
  - condition: state
    entity_id: script.up_down_lights
    state: 'off'
  action:
  - service: script.up_down_lights
    data_template:
      vol_old: '{{ vol_old }}'
      vol_new: '{{ vol_new }}'
- id: auto_lock
  alias: Lock After 20 Minutes
  description: ''
  trigger:
  - entity_id: binary_sensor.unlocked_closed
    for: 00:20:00
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id: lock.home_door_lock
    service: lock.lock
- id: sonos_volume_up_group
  alias: Volume Up, Sonos Group
  description: ''
  trigger:
  - entity_id: sensor.bedroom_volume
    platform: state
  - entity_id: sensor.kitchen_volume
    platform: state
  - entity_id: sensor.living_room_volume
    platform: state
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''').replace(''_volume'',''''),
      ''playing'') }}'
  action:
  - service: script.sonos_group_if_playing
    data_template:
      target_player: media_player.{{ trigger.entity_id.replace('sensor.', '').replace('_volume','')
        }}
- id: sonos_volume_down_move
  alias: Volume Down, Sonos Move
  description: ''
  trigger:
  - entity_id: sensor.bedroom_volume
    platform: state
  - entity_id: sensor.kitchen_volume
    platform: state
  - entity_id: sensor.living_room_volume
    platform: state
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''').replace(''_volume'',''''),
      ''playing'') }}'
  action:
  - service: script.sonos_move_if_playing
    data_template:
      new_player: '{{ trigger.entity_id.replace(''sensor.'', ''media_player.'').replace(''_volume'','''')
        }}'
      old_player: '{{ ''media_player.'' + states(''input_select.music_controller'')  }}'
- id: sonos_volume_ungroup
  alias: Volume Change, Sonos Ungroup
  description: ''
  trigger:
  - entity_id: sensor.bedroom_volume
    platform: state
  - entity_id: sensor.kitchen_volume
    platform: state
  - entity_id: sensor.living_room_volume
    platform: state
  condition:
  - condition: template
    value_template: '{{ not is_state(''media_player.''+trigger.entity_id.replace(''sensor.'','''').replace(''_volume'',''''),
      ''playing'') }}'
  - condition: template
    value_template: '{{ not is_state(''media_player.'' + states(''input_select.music_controller''),''playing'')
      }}'
  action:
  - service: sonos.unjoin
    data_template:
      entity_id: '{{ ''media_player.''+trigger.entity_id.replace(''sensor.'', '''').replace(''_volume'','''')
        }}'
- id: sonos_play_change_controller
  alias: Sonos Play, Change Music Controller
  description: ''
  trigger:
  - entity_id: media_player.bedroom
    platform: state
    to: playing
  - entity_id: media_player.kitchen
    platform: state
    to: playing
  - entity_id: media_player.living_room
    platform: state
    to: playing
  condition: []
  action:
  - data_template:
      target_player: '{{ trigger.entity_id }}'
    service: script.sonos_set_controller
- id: '1585541724720'
  alias: Reset pressed_pause
  description: ''
  trigger:
  - entity_id: input_boolean.pressed_pause_bedroom
    for: 00:00:03
    platform: state
    to: 'on'
  - entity_id: input_boolean.pressed_pause_kitchen
    for: 00:00:03
    platform: state
    to: 'on'
  - entity_id: input_boolean.pressed_pause_living_room
    for: 00:00:03
    platform: state
    to: 'on'
  condition: []
  action:
  - data_template:
      entity_id: '{{ trigger.entity_id }}'
    service: input_boolean.turn_off
- id: '1585541805967'
  alias: Press Pause, Turn On pressed_pause
  description: ''
  trigger:
  - entity_id: media_player.bedroom
    from: playing
    platform: state
    to: paused
  - entity_id: media_player.kitchen
    from: playing
    platform: state
    to: paused
  - entity_id: media_player.living_room
    from: playing
    platform: state
    to: paused
  condition: []
  action:
  - data_template:
      entity_id: '{{ trigger.entity_id.replace(''media_player.'', ''input_boolean.pressed_pause_'')
        }}'
    service: input_boolean.turn_on
- id: '1585541929094'
  alias: Press Play With pressed_pause On, Next Track
  description: ''
  trigger:
  - entity_id: media_player.bedroom
    from: paused
    platform: state
    to: playing
  - entity_id: media_player.kitchen
    from: paused
    platform: state
    to: playing
  - entity_id: media_player.living_room
    from: paused
    platform: state
    to: playing
  condition:
  - condition: template
    value_template: '{{ is_state(trigger.entity_id.replace(''media_player.'', ''input_boolean.pressed_pause_''),
      ''on'') }}'
  action:
  - data_template:
      entity_id: '{{ trigger.entity_id }}'
    service: media_player.media_next_track
- id: spotify_guest_room_echo
  alias: Spotify from Guest Room Echo to Stereo
  trigger:
  - entity_id: sensor.spotify_source
    platform: state
    to: Guest Room Echo Dot
  action:
    service: script.spotify_guest_room
- id: apple_watch_group
  alias: AW Group
  trigger:
  - event_data:
      actionName: bedroom
    event_type: ios.action_fired
    platform: event
  - event_data:
      actionName: kitchen
    event_type: ios.action_fired
    platform: event
  - event_data:
      actionName: living_room
    event_type: ios.action_fired
    platform: event
  action:
  - service: script.sonos_group
    data_template:
      target_player: '{{ ''media_player.'' + trigger.event.data.actionName }}'
- id: notify_garage
  alias: Notify When Garage Is Open
  description: ''
  trigger:
  - entity_id: cover.garage_door
    for: 00:20:00
    platform: state
    to: open
  - entity_id: cover.garage_door
    for: 00:40:00
    platform: state
    to: open
  - entity_id: cover.garage_door
    for: 01:00:00
    platform: state
    to: open
  condition: []
  action:
  - data_template:
      data:
        push:
          badge: 0
          category: garage
      message: 'Hey silly, the garage has been open for {{ (trigger.for|string)[2:4].replace(''00'',''60'')
        }} minutes!

        '
      title: Garage Open
    service: notify.mobile_app_eye_phone
  - data_template:
      data:
        push:
          badge: 0
          category: garage
      message: 'Hey silly, the garage has been open for {{ (trigger.for|string)[2:4].replace(''00'',''60'')
        }} minutes!

        '
      title: Garage Open
    service: notify.mobile_app_meghans_iphone
- id: ios_garage_triggered
  alias: iOS - Garage Triggered Action
  trigger:
  - event_data:
      actionName: GARAGE_CLOSE
    event_type: ios.notification_action_fired
    platform: event
  action:
  - entity_id: cover.garage_door
    service: cover.close_cover
- id: notify_door
  alias: Notify When A Door Is Open
  description: ''
  trigger:
  - entity_id: binary_sensor.front_door
    for: 00:20:00
    platform: state
    to: 'on'
  - entity_id: binary_sensor.front_door
    for: 00:40:00
    platform: state
    to: 'on'
  - entity_id: binary_sensor.front_door
    for: 01:00:00
    platform: state
    to: 'on'
  - entity_id: binary_sensor.side_door
    for: 00:20:00
    platform: state
    to: 'on'
  - entity_id: binary_sensor.side_door
    for: 00:40:00
    platform: state
    to: 'on'
  - entity_id: binary_sensor.side_door
    for: 01:00:00
    platform: state
    to: 'on'
  condition: []
  action:
  - data_template:
      message: 'Hey silly, the {{ state_attr(trigger.entity_id, ''friendly_name'')|lower
        }} has been open for {{ (trigger.for|string)[2:4].replace(''00'',''60'') }}
        minutes!

        '
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open

        '
    service: notify.mobile_app_eye_phone
  - data_template:
      message: 'Hey silly, the {{ state_attr(trigger.entity_id, ''friendly_name'')|lower
        }} has been open for {{ (trigger.for|string)[2:4].replace(''00'',''60'') }}
        minutes!

        '
      title: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} Open

        '
    service: notify.mobile_app_meghans_iphone
- id: soundbar_or_tv_off_lights_on
  alias: Soundbar or TV Off, Lights On
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.guest_room_stereo_main
    to: 'off'
    from: 'on'
  - platform: state
    entity_id: media_player.vizio_smartcast
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.guests_visiting
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      after: '20:00'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.tv_off_recent
  - service: input_boolean.turn_on
    entity_id: input_boolean.tv_off_recent
  - service: script.coming_up
  mode: single
- id: turn_off_tv_off_recent
  alias: Turn Off TV-Off-Recent Indicator After 1 Minute
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.tv_off_recent
    to: 'on'
    for: 00:01:00
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.tv_off_recent
- id: tv_on_turn_off_kitchen_light
  alias: TV Back On, Turn Off Kitchen Light
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.guest_room_stereo_main
    to: 'on'
  - platform: state
    entity_id: media_player.vizio_smartcast
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.tv_off_recent
    state: 'on'
  action:
  - service: switch.turn_off
    entity_id: switch.kitchen_lights
  - service: input_boolean.turn_off
    entity_id: input_boolean.tv_off_recent
