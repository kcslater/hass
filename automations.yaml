  - id: porch_light_off_20mins
    alias: 'Porch Light Off After 20 Mins'
    trigger:
      - platform: state
        entity_id: light.front_door
        to: 'on'
        for: '00:20:00'
    action:
      - service: light.turn_off
        data:
          entity_id: light.front_door

#   - alias: 'k_present Off, Turn Off k_entered'
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.k_present
#         to: 'off'
#     action:
#       - service: input_boolean.turn_off
#         entity_id: input_boolean.k_entered

#   - alias: 'm_present Off, Turn Off m_entered'
#     trigger:
#       - platform: state
#         entity_id: binary_sensor.m_present
#         to: 'off'
#     action:
#       - service: input_boolean.turn_off
#         entity_id: input_boolean.m_entered

#   - alias: 'K Enter WiFi First Time, Unlock Door'
#     trigger:
#       - platform: state
#         entity_id: device_tracker.k_iphone
#         to: 'home'
#       - platform: state
#         entity_id: device_tracker.k_watch
#         to: 'home'
#     condition:
#       - condition: state
#         entity_id: input_boolean.k_entered
#         state: 'off'
#       - condition: state
#         entity_id: alarm_control_panel.abode_alarm
#         state: 'disarmed'
#     action:
#       - service: lock.unlock
#         entity_id: lock.home_door_lock
#       - service: input_boolean.turn_on
#         entity_id: input_boolean.k_entered

#   - alias: 'M Enter WiFi First Time, Unlock Door'
#     trigger:
#       - platform: state
#         entity_id: device_tracker.m_iphone
#         to: 'home'
#     condition:
#       - condition: state
#         entity_id: input_boolean.m_entered
#         state: 'off'
#       - condition: state
#         entity_id: alarm_control_panel.abode_alarm
#         state: 'disarmed'
#     action:
#       - service: lock.unlock
#         entity_id: lock.home_door_lock
#       - service: input_boolean.turn_on
#         entity_id: input_boolean.m_entered

  - id: remove_new_devices_notification
    alias: 'Remove new devices notification'
    trigger:
      - platform: state
        entity_id: persistent_notification.config_entry_discovery
        to: notifying
      - platform: homeassistant
        event: start
    action:
      - service: persistent_notification.dismiss 
        data:
          notification_id: config_entry_discovery

# # For starting Homekit - 1
#   - alias: 'Start HomeKit when media_player ready'
#     trigger:
#       #- platform: event
#       #  event_type: media_player.network_ready
#       - platform: event
#         event_type: media_player.network_complete
#       #- platform: event
#       #  event_type: media_player.network_complete_some_dead
#     action:
#       - service: homekit.start

# For starting Homekit - 2
  - id: start_homekit2
    alias: 'HA Starts, Wait 3 Mins + Start HomeKit'
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: 00:03  # Waits 3 minutes
      - service: homekit.start

# Hue remote 1 hold
  - id: time_for_bed_hue
    alias: 'Hold Hue On Button, Time For Bed'
    trigger:
      - platform: state
        entity_id: sensor.hue_dimmer_switch_1
        to: '1_hold'
    action:
      service: script.turn_on
      data:
        entity_id: script.time_for_bed

# Hue remote 4 hold
  - id: goodnight_hue
    alias: 'Hold Hue Off Button, Goodnight'
    trigger:
      - platform: state
        entity_id: sensor.hue_dimmer_switch_1
        to: '4_hold'
    action:
      service: script.turn_on
      data:
        entity_id: script.goodnight

# LOCATION AUTOMATIONS
  - id: standby_5am
    alias: '5 AM Present, Standby'
    trigger:
      - platform: time
        at: '05:00:00'
    condition:
      - condition: state
        entity_id: group.all_present
        state: 'on'
    action:
      - service: alarm_control_panel.alarm_disarm
        data:
          entity_id: alarm_control_panel.abode_alarm

  - id: home_11pm
    alias: '11 PM Present, Home'
    trigger:
      - platform: time
        at: '23:00:00'
    condition:
      - condition: state
        entity_id: group.all_present
        state: 'on'
    action:
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.abode_alarm
      - service: lock.lock
        data:
          entity_id: lock.home_door_lock

  - id: everything_off_2am
    alias: '2 AM Not Present, Everything Off'
    trigger:
      - platform: time
        at: '02:00:00'
    condition:
      - condition: state
        entity_id: group.all_present
        state: 'off'
    action:
      - service: script.turn_on
        data:
          entity_id: script.everything_off

# Turns "sleeping" off if 6:30am
  - id: sleeping_off_6am
    alias: '6 AM, Sleeping Off'
    trigger:
      - platform: time
        at: '06:00:00'
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.sleeping

  - id: standby_arrival
    alias: 'Anyone Arrives, Standby'
    trigger:
      - platform: state
        entity_id: binary_sensor.m_present
        to: 'on'
      - platform: state
        entity_id: binary_sensor.k_present
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.sleeping
        state: 'off'
    action:
      - service: alarm_control_panel.alarm_disarm
        data:
          entity_id: alarm_control_panel.abode_alarm

  - id: porch_light_on_arrival_night
    alias: 'Anyone Arrives At Night, Porch Light'
    trigger:
      - platform: state
        entity_id: binary_sensor.m_present
        to: 'on'
      - platform: state
        entity_id: binary_sensor.k_present
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.sleeping
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
    action:
      - service: light.turn_on
        data:
          entity_id: light.front_door

  - id: living_room_lights_on_first_arrival
    alias: 'First Person Arrives At Night, Living Room Lights'
    trigger:
      - platform: state
        entity_id: group.all_present
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.sleeping
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: time
        before: '22:00:00'
    action:
      service: light.turn_on
      data:
        entity_id: light.living_room

  - id: goodbye_last_exit
    alias: 'Last Person Leaves, Goodbye'
    trigger:
      - platform: state
        entity_id: group.all_present
        to: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.sleeping
        state: 'off'
    action:
      - service: script.turn_on
        data:
          entity_id: script.goodbye

  - id: goodbye_away
    alias: 'Abode_alarm to Away, Goodbye'
    trigger:
      - platform: state
        entity_id: alarm_control_panel.abode_alarm
        to: 'armed_away'
    action:
      - service: script.turn_on
        data:
          entity_id: script.goodbye

# MEDIA AUTOMATIONS

# Mute Soundbar if volume down up down
  - id: mute_counter_1
    alias: 'Soundbar down 0 -> 1'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '0'
      - condition: template
        value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
    action:
      - service: counter.increment
        data:
          entity_id: counter.mute_counter
  - id: mute_counter_2
    alias: 'Soundbar up 1 -> 2'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '1'
      - condition: template
        value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
    action:
      - service: counter.increment
        data:
          entity_id: counter.mute_counter
  - id: mute_complete
    alias: 'Soundbar down 2 -> mute'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '2'
      - condition: template
        value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.guest_room_stereo_main
          is_volume_muted: true
  - id: mute_counter_0_idle
    alias: 'Mute Counter Idle -> 0'
    trigger:
      - platform: state
        entity_id: counter.mute_counter
        to: '1'
        for: '00:00:03'
      - platform: state
        entity_id: counter.mute_counter
        to: '2'
        for: '00:00:03'
    action:
      - service: counter.reset
        data:
          entity_id: counter.mute_counter
    
# Switch Spotify
  - id: spotify_stereo_echo
    alias: 'Spotify on Echo -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Kitchen Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Bedroom Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Living Room Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Guest Room Echo Dot'
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ states("sensor.spotify_source").replace(" Echo Dot", "").replace(" ","_").lower() }}

  - id: spotify_stereo_volume
    alias: 'Stereo Volume Change -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: sensor.living_room_volume
      - platform: state
        entity_id: sensor.kitchen_volume
      - platform: state
        entity_id: sensor.bedroom_volume
      - platform: state
        entity_id: sensor.basement_volume
    condition:
      - condition: state
        entity_id: media_player.spotify
        state: 'playing'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Kitchen Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Bedroom Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Basement Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Guest Room Stereo'
      - condition: template
        value_template: "{{ is_state(trigger.entity_id.replace('sensor.','media_player.').replace('_volume','_stereo_main'), 'idle') }}"
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ trigger.entity_id.replace("sensor.", "").replace("_volume", "") }}

# Switches Spotify to Stereo if Stereo turns on
  - id: spotify_stereo_on
    alias: 'Stereo On -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: media_player.living_room_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.kitchen_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.bedroom_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.basement_stereo_main
        from: 'off'
    condition:
      - condition: state
        entity_id: media_player.spotify
        state: 'playing'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Kitchen Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Bedroom Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Basement Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Guest Room Stereo'
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ trigger.entity_id.replace("media_player.", "").replace("_stereo_main", "") }}
