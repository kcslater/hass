# For starting Homekit - 1
  - alias: 'Start HomeKit when media_player ready'
    trigger:
      #- platform: event
      #  event_type: media_player.network_ready
      - platform: event
        event_type: media_player.network_complete
      #- platform: event
      #  event_type: media_player.network_complete_some_dead
    action:
      - service: homekit.start
# For starting Homekit - 2
  - alias: 'Start HomeKit'
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: 00:05  # Waits 5 minutes
      - service: homekit.start
# Hue remote 1 hold
  - alias: 'Hold Hue On Button -> Time For Bed'
    trigger:
      - platform: state
        entity_id: sensor.hue_dimmer_switch_1
        to: '1_hold'
    action:
      service: script.turn_on
      entity_id: script.time_for_bed
# Hue remote 4 hold
  - alias: 'Hold Hue Off Button -> Goodnight'
    trigger:
      - platform: state
        entity_id: sensor.hue_dimmer_switch_1
        to: '4_hold'
    action:
      service: script.turn_on
      entity_id: script.goodnight
# Disarms if any person arrives
#  - alias: 'Any Entry -> Standby'
#    trigger:
#      - platform: state
#        entity_id: device_tracker.kailins_iphone
#        to: 'home'
#      - platform: state
#        entity_id: device_tracker.meghans_iphone
#        to: 'home'
#      - platform: event
#        event_type: abode_automation
#        event_data:
#          device_name: 'If any phone enters then Standby'
#    condition:
#      condition: state
#      entity_id: alarm_control_panel.abode
#      state: 'armed_away'
#    action:
#      - service: alarm_control_panel.alarm_disarm
#        entity_id: alarm_control_panel.abode
# Turns alarm to Standby if 5:30am and someone home
# (Standby is redundant with Abode, but it also turns on media autos)
  - alias: '5:30 AM At Home -> Standby'
    trigger:
      - platform: time
        at: '05:30:00'
    condition:
      - condition: state
        entity_id: group.all_devices
        state: 'home'
    action:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.abode
# Turns alarm to Home if 11:00pm and someone home
# (Redundant with Abode, but M's GPS is sometimes bad)
  - alias: '11 PM At Home -> Home'
    trigger:
      - platform: time
        at: '23:00:00'
    condition:
      - condition: state
        entity_id: group.all_devices
        state: 'home'
    action:
      - service: alarm_control_panel.alarm_arm_home
        entity_id: alarm_control_panel.abode
# Turns on Front Door light if anyone gets home after sunset. Turns off after 5 minutes
  - alias: 'Any Entry After Sunset -> Porch On Then Off'
    trigger:
      #- platform: state
      #  entity_id: device_tracker.kailins_iphone
      #  to: 'home'
      #- platform: state
      #  entity_id: device_tracker.meghans_iphone
      #  to: 'home'
      - platform: event
        event_type: abode_automation
        event_data:
          device_name: 'If any phone enters then Standby'
    condition:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
    action:
      - service: light.turn_on
        entity_id: light.front_door
      - delay: 00:15
      - service: light.turn_off
        entity_id: light.front_door
# Turns on Living Room lights if first person gets home after sunset and before 11pm
  - alias: 'Any Entry After Sunset Before 10 -> Living Room On'
    trigger:
      #- platform: state
      #  entity_id: device_tracker.kailins_iphone
      #  to: 'home'
      #- platform: state
      #  entity_id: device_tracker.meghans_iphone
      #  to: 'home'
      - platform: event
        event_type: abode_automation
        event_data:
          device_name: 'If any phone enters then Standby'
    condition:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: time
        after: '16:00:00'
        before: '22:00:00'
    action:
      service: light.turn_on
      entity_id: light.living_room
# Turns off devices if Abode goes to Away Mode
  - alias: 'Abode to Away -> Everything Off'
    trigger:
      - platform: state
        entity_id: alarm_control_panel.abode
        to: 'armed_away'
    action:
      - service: script.turn_on
        entity_id: script.everything_off
      # in case of guests
      - service: homeassistant.turn_off
        entity_id: group.downstairs
# Turns off devices if 2AM and no one home (in case of power outage)
  - alias: '2 AM Away -> Everything Off'
    trigger:
      - platform: time
        at: '02:00:00'
    condition:
      - condition: state
        entity_id: group.all_devices
        state: 'not_home'
    action:
      - service: script.turn_on
        entity_id: script.everything_off
      # in case of guests
      - service: homeassistant.turn_off
        entity_id: group.downstairs
# Turns off TV if Guest Room Stereo turns off
#  - alias: 'Soundbar off -> TV off'
#    trigger:
#      - platform: state
#        entity_id: media_player.guest_room_stereo_main
#        to: 'off'
#    action:
#      - service: media_player.turn_off
#        entity_id: media_player.vizio_smartcast
# Mute Soundbar 1
  - alias: 'Soundbar down 0 -> 1'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '0'
      - condition: template
        value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
    action:
      - service: counter.increment
        entity_id: counter.mute_counter
  - alias: 'Soundbar up 1 -> 2'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '1'
      - condition: template
        value_template: '{{ trigger.to_state.state > trigger.from_state.state }}'
    action:
      - service: counter.increment
        entity_id: counter.mute_counter
  - alias: 'Soundbar down 2 -> mute'
    trigger:
      - platform: state
        entity_id: sensor.guest_room_volume
    condition: 
      - condition: state
        entity_id: counter.mute_counter
        state: '2'
      - condition: template
        value_template: '{{ trigger.to_state.state < trigger.from_state.state }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.guest_room_stereo_main
          is_volume_muted: true
  - alias: 'Mute Counter Idle -> 0'
    trigger:
      - platform: state
        entity_id: counter.mute_counter
        to: '1'
        for: '00:00:03'
      - platform: state
        entity_id: counter.mute_counter
        to: '2'
        for: '00:00:03'
    action:
      - service: counter.reset
        entity_id: counter.mute_counter
    
# Switch Spotify
  - alias: 'Spotify on Echo -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: media_player.spotify
        to: 'playing'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Kitchen Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Bedroom Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Living Room Echo Dot'
      - platform: state
        entity_id: sensor.spotify_source
        to: 'Guest Room Echo Dot'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: sensor.spotify_source
          state: 'Kitchen Echo Dot'
        - condition: state
          entity_id: sensor.spotify_source
          state: 'Bedroom Echo Dot'
        - condition: state
          entity_id: sensor.spotify_source
          state: 'Living Room Echo Dot'
        - condition: state
          entity_id: sensor.spotify_source
          state: 'Guest Room Echo Dot'
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ states("sensor.spotify_source").replace(" Echo Dot", "").replace(" ","_").lower() }}

  - alias: 'Stereo On -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: media_player.living_room_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.kitchen_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.bedroom_stereo_main
        from: 'off'
      - platform: state
        entity_id: media_player.basement_stereo_main
        from: 'off'
    condition:
      - condition: state
        entity_id: media_player.spotify
        state: 'playing'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Kitchen Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Bedroom Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Basement Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Guest Room Stereo'
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ trigger.entity_id.replace("media_player.", "").replace("_stereo_main", "") }}

  - alias: 'Stereo Volume Change -> Spotify on Stereo'
    trigger:
      - platform: state
        entity_id: sensor.living_room_volume
      - platform: state
        entity_id: sensor.kitchen_volume
      - platform: state
        entity_id: sensor.bedroom_volume
      - platform: state
        entity_id: sensor.basement_volume
    condition:
      - condition: state
        entity_id: media_player.spotify
        state: 'playing'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Kitchen Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Bedroom Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Basement Stereo'
          - condition: state
            entity_id: sensor.spotify_source
            state: 'Guest Room Stereo'
      - condition: template
        value_template: "{{ is_state(trigger.entity_id.replace('sensor.','media_player.').replace('_volume','_stereo_main'), 'idle') }}"
    action:
      - service: script.turn_on
        data_template:
          entity_id: >
            script.spotify_{{ trigger.entity_id.replace("sensor.", "").replace("_volume", "") }}
