# GENERAL
good_morning:
  alias: "Good Morning"
  sequence:
    - service: light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 100
    - service: input_boolean.turn_off
      entity_id: input_boolean.sleeping

lock_if_closed_1:
  alias: "Lock The Door If Closed And Unlocked"
  sequence:
    - condition: state
      entity_id: binary_sensor.front_door
      state: 'off'
    - condition: state
      entity_id: lock.home_door_lock
      state: 'unlocked'
    - service: lock.lock
      entity_id: lock.home_door_lock

lock_if_closed:
  alias: "Lock The Door Or Notify That It Is Open"
  sequence:
    - service: script.lock_if_closed_1
    - condition: state
      entity_id: binary_sensor.front_door
      state: 'on'
    - service: notify.mobile_app_eye_phone
      data_template:
        message: >
          Hey silly, you asked me to lock the front door, but you have to close it first!
        title: Front Door Open
    - service: notify.mobile_app_meghans_iphone
      data_template:
        message: >
          Hey silly, you asked me to lock the front door, but you have to close it first!
        title: Front Door Open

base_off:
  alias: "Base Off"
  sequence:
    # Pause Sonos speakers
    - service: media_player.media_pause
      entity_id: media_player.bedroom
    - service: media_player.media_pause
      entity_id: media_player.kitchen
    - service: media_player.media_pause
      entity_id: media_player.living_room
    # Turn off upstairs and basement
    - service: homeassistant.turn_off
      entity_id: group.upstairs
    - service: light.turn_off
      entity_id: light.basement

nighttime:
  alias: "Night-time"
  sequence:
    - service: script.base_off
    # Sleep mode
    - service: input_boolean.turn_on
      entity_id: input_boolean.sleeping
    # Set alarm
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.abode_alarm
    # Lock door
    - service: script.lock_if_closed
    # Close garage
    - service: cover.close_cover
      entity_id: cover.garage_door
    # If no guests, turn off guest room
    - condition: state
      entity_id: input_boolean.guests_visiting
      state: 'off'
    - service: homeassistant.turn_off
      entity_id: group.guest_room

everything_off:
  alias: "Everything Off"
  sequence:
    - service: script.base_off
    - service: homeassistant.turn_off
      entity_id: group.bedroom
    - service: homeassistant.turn_off
      entity_id: group.guest_room
    - service: input_boolean.turn_off
      entity_id: input_boolean.alexa_ha_nightlight

goodnight:
  alias: "Goodnight"
  sequence:
    - service: script.nighttime
    - service: light.turn_off
      data:
        entity_id: light.bedroom
        # transition: 120

time_for_bed:
  alias: "Time For Bed"
  sequence:
    - service: script.nighttime
    - service: light.turn_on
      entity_id: light.bedroom

tv_time:
  alias: "TV Time"
  sequence:
    - service: script.base_off
    # Set soundbar to correct input
    - service: media_player.turn_on
      entity_id: media_player.guest_room_stereo_main
    - service: media_player.select_source
      data:
        entity_id: media_player.guest_room_stereo_main
        source: 'tv'
    - service: media_player.turn_on
      entity_id: media_player.television
    # Turn on lamp and fade out
    - condition: or
      conditions:
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        - condition: time
          after: '20:00:00'
    - service: light.turn_on
      data:
        entity_id: light.guest_room
        brightness_pct: 100
    - delay: 00:05:00
    - service: light.turn_off
      entity_id: light.guest_room

coming_up:
  alias: "Coming Up"
  sequence:
    - service: switch.turn_on
      entity_id: switch.kitchen_light
    - service: light.turn_on
      data:
        entity_id: light.guest_room
        brightness_pct: 100
    - delay: 00:05:00
    - service: light.turn_off
      entity_id: light.guest_room

goodbye:
  alias: "Goodbye"
  sequence:
    - service: script.everything_off
    # Arm alarm system for Away
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.abode_alarm
    # Turn off sleep mode
    - service: input_boolean.turn_off
      entity_id: input_boolean.sleeping
    # Lock the door
    - service: script.lock_if_closed
    # Close garage
    - service: cover.close_cover
      entity_id: cover.garage_door

standby:
  alias: "Standby"
  sequence:
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.abode_alarm

# SPECIAL MUSIC
turntable:
  alias: "Turntable"
  sequence:
    - service: media_player.select_source
      data:
        entity_id: media_player.living_room
        source: Line-in
    - service: media_player.media_play
      entity_id: media_player.living_room
close_garage:
  alias: "Close Garage"
  sequence:
    - service: cover.close_cover
      entity_id: cover.garage_door

switch_to_tv:
  alias: "Switch to TV"
  sequence:
    - service: media_player.select_source
      data:
        entity_id: media_player.guest_room_stereo_main
        source: "tv"

down_up_down_mute:
  alias: "Down Up Down, Mute"
  sequence:
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.guest_room_volume
      timeout: 1
      continue_on_timeout: false
    - condition: template
      value_template: "{{ states('sensor.guest_room_volume') > vol_new }}"
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.guest_room_volume
      timeout: 1
      continue_on_timeout: false
    - condition: template
      value_template: "{{ states('sensor.guest_room_volume') < vol_old }}"
    - service: media_player.volume_mute
      data:
        entity_id: media_player.guest_room_stereo_main
        is_volume_muted: true  

up_down_lights:
  alias: "Up Down, Lights"
  sequence:
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.guest_room_volume
      timeout: 1
      continue_on_timeout: false
    - condition: template
      value_template: "{{ states('sensor.guest_room_volume') < vol_new }}"
    - service: light.toggle
      entity_id: light.guest_room
    - delay: 00:00:03

### SONOS SCRIPTS

# sonos_pause_play_skip:
#   alias: "Sonos Pause Play, Skip"
#   sequence:
#     - wait_for_trigger:
#         - platform: state
          

sonos_group:
  alias: "Sonos Group"
  sequence:
    - condition: template
      value_template: >
        {% if target_player is not none and target_player != false and target_player != '' %}
          true
        {% else %}
          false
        {% endif %}
   
    # The target player must not be playing anything
    - condition: template
      value_template: >
        {% if states(target_player) != 'playing' %}
          true
        {% else %}
          false
        {% endif %}
   
    # First join the player into the group
    - service: sonos.join
      data_template:
        master: media_player.{{ states('input_select.music_controller') }}
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}
    
    # Now set the target player to the same volume as the controller
    - service: media_player.volume_set
      data_template:
        entity_id: >
          {% if target_player is not none %}
            {{ target_player }}
          {% endif %}
        volume_level: >
          {{ state_attr('media_player.' + states('input_select.music_controller'), 'volume_level') }}

sonos_ungroup:
  alias: "Sonos Ungroup"
  sequence:
    # target_player must be non-missing
    - condition: template
      value_template: >
        {{ target_player is not none and target_player != false and target_player != '' }}
        
    # The target player must be playing
    - condition: template
      value_template: >
        {{ states(target_player) == 'playing' }}
   
    # The target must not be the co-ordinator
    - condition: template
      value_template: >
        {{ target_player != 'media_player.' + states('input_select.music_controller') }}
    
    - service: sonos.unjoin
      data_template:
        entity_id: '{{ target_player }}'

sonos_move:
  alias: "Sonos Move"
  sequence:
    - service: script.sonos_group
      data_template:
        target_player: '{{ new_player }}'
    - service: sonos.unjoin
      data_template:
        entity_id: '{{ old_player }}'
    - service: script.sonos_set_controller
      data_template:
        target_player: '{{ new_player }}'

sonos_move_bedroom:
  alias: "Sonos Move Bedroom"
  sequence:
    - service: script.sonos_move
      data_template:
        new_player: 'media_player.bedroom'
        old_player: '{{ ''media_player.'' + states(''input_select.music_controller'') }}'

sonos_move_kitchen:
  alias: "Sonos Move Kitchen"
  sequence:
    - service: script.sonos_move
      data_template:
        new_player: 'media_player.kitchen'
        old_player: '{{ ''media_player.'' + states(''input_select.music_controller'') }}'

sonos_move_living_room:
  alias: "Sonos Move Living Room"
  sequence:
    - service: script.sonos_move
      data_template:
        new_player: 'media_player.living_room'
        old_player: '{{ ''media_player.'' + states(''input_select.music_controller'') }}'

sonos_group_bedroom:
  alias: "Sonos Group Bedroom"
  sequence:
    - service: script.sonos_group
      data:
        target_player: media_player.bedroom

sonos_group_kitchen:
  alias: "Sonos Group Kitchen"
  sequence:
    - service: script.sonos_group
      data:
        target_player: media_player.kitchen

sonos_group_living_room:
  alias: "Sonos Group Living Room"
  sequence:
    - service: script.sonos_group
      data:
        target_player: media_player.living_room

sonos_group_all:
  alias: "Sonos Group All"
  sequence:
    - service: script.sonos_group
      data:
        target_player: media_player.living_room
    - service: script.sonos_group
      data:
        target_player: media_player.kitchen
    - service: script.sonos_group
      data:
        target_player: media_player.bedroom

sonos_ungroup_all:
  alias: "Sonos Ungroup All"
  sequence:
    - service: sonos.unjoin
      data_template:
        entity_id: >
          {% if states('input_select.music_controller') == 'bedroom' %}
            media_player.kitchen
          {% else %}
            media_player.bedroom
          {% endif %}
    - service: sonos.unjoin
      data_template:
        entity_id: >
          {% if states('input_select.music_controller') == 'bedroom' or states('input_select.music_controller') == 'kitchen' %}
            media_player.living_room
          {% else %}
            media_player.kitchen
          {% endif %}

sonos_ungroup_bedroom:
  alias: "Sonos Ungroup Bedroom"
  sequence:
    - service: sonos.unjoin
      entity_id: media_player.bedroom

sonos_ungroup_kitchen:
  alias: "Sonos Ungroup Kitchen"
  sequence:
    - service: sonos.unjoin
      entity_id: media_player.kitchen

sonos_ungroup_living_room:
  alias: "Sonos Ungroup Living Room"
  sequence:
    - service: sonos.unjoin
      entity_id: media_player.living_room

sonos_set_controller:
  alias: "Set Music Controller"
  sequence:
    - delay: 00:00:01
    - condition: template
      value_template: >
        {{ target_player is not none and target_player != false and target_player != '' }}
    - condition: template
      value_template: >
        {{ target_player == state_attr(target_player, 'sonos_group')[0] }}
    - service: input_select.select_option
      data_template:
        option: >
          {{ target_player.replace('media_player.', '') }}
      entity_id: input_select.music_controller

sonos_pause:
  alias: "Sonos Pause"
  sequence:
    - service: media_player.media_pause
      data_template:
        entity_id: '{{ "media_player." + states("input_select.music_controller") }}'

sonos_play:
  alias: "Sonos Play"
  sequence:
    - service: media_player.media_play
      data_template:
        entity_id: '{{ "media_player." + states("input_select.music_controller") }}'

sonos_next:
  alias: "Sonos Next"
  sequence:
    - service: media_player.media_next_track
      data_template:
        entity_id: '{{ "media_player." + states("input_select.music_controller") }}'

sonos_previous:
  alias: "Sonos Previous"
  sequence:
    - service: media_player.media_previous_track
      data_template:
        entity_id: '{{ "media_player." + states("input_select.music_controller") }}'

### SPOTIFY SCRIPTS

spotify_switch:
  alias: "Spotify Switch"
  sequence: 
    - service: media_player.select_source
      data_template:
        entity_id: media_player.spotify
        source: "{{ title }}"

spotify_bedroom:
  alias: "Spotify Bedroom"
  sequence:
    - service: script.spotify_switch
      data:
        title: "Bedroom"
spotify_kitchen:
  alias: "Spotify Kitchen"
  sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.kitchen
        volume_level: 0.14
    - service: script.spotify_switch
      data:
        title: "Kitchen"
spotify_living_room:
  alias: "Spotify Living Room"
  sequence:
    - service: media_player.volume_set
      data:
        entity_id: media_player.living_room
        volume_level: 0.17
    - service: script.spotify_switch
      data:
        title: "Living Room"
spotify_guest_room:
  alias: "Spotify Guest Room"
  sequence:
    - service: script.spotify_switch
      data:
        title: "Guest Room Stereo"

